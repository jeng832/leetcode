import org.junit.Assert;
import org.junit.Test;

import java.util.Arrays;
import java.util.List;

public class SolutionTest {

    @Test
    public void testExample1() {
        Solution sol = new Solution();
        List<String> output = sol.generateParenthesis(3);
        List<String> expected = Arrays.asList("((()))", "(()())", "(())()", "()(())", "()()()");
        check(expected, output);
    }

    @Test
    public void testExample2() {
        Solution sol = new Solution();
        List<String> output = sol.generateParenthesis(4);
        List<String> expected = Arrays.asList("(((())))", "((()()))", "((())())", "((()))()", "(()(()))", "(()()())",
                "(()())()", "(())(())", "(())()()", "()((()))", "()(()())", "()(())()", "()()(())", "()()()()");
        check(expected, output);
    }

    @Test
    public void testExample3() {
        Solution sol = new Solution();
        List<String> output = sol.generateParenthesis(6);
        List<String> expected = Arrays.asList("(((((())))))","((((()()))))","((((())())))","((((()))()))","((((())))())","((((()))))()","(((()(()))))","(((()()())))","(((()())()))","(((()()))())","(((()())))()","(((())(())))","(((())()()))","(((())())())","(((())()))()","(((()))(()))","(((()))()())","(((()))())()","(((())))(())","(((())))()()","((()((()))))","((()(()())))","((()(())()))","((()(()))())","((()(())))()","((()()(())))","((()()()()))","((()()())())","((()()()))()","((()())(()))","((()())()())","((()())())()","((()()))(())","((()()))()()","((())((())))","((())(()()))","((())(())())","((())(()))()","((())()(()))","((())()()())","((())()())()","((())())(())","((())())()()","((()))((()))","((()))(()())","((()))(())()","((()))()(())","((()))()()()","(()(((()))))","(()((()())))","(()((())()))","(()((()))())","(()((())))()","(()(()(())))","(()(()()()))","(()(()())())","(()(()()))()","(()(())(()))","(()(())()())","(()(())())()","(()(()))(())","(()(()))()()","(()()((())))","(()()(()()))","(()()(())())","(()()(()))()","(()()()(()))","(()()()()())","(()()()())()","(()()())(())","(()()())()()","(()())((()))","(()())(()())","(()())(())()","(()())()(())","(()())()()()","(())(((())))","(())((()()))","(())((())())","(())((()))()","(())(()(()))","(())(()()())","(())(()())()","(())(())(())","(())(())()()","(())()((()))","(())()(()())","(())()(())()","(())()()(())","(())()()()()","()((((()))))","()(((()())))","()(((())()))","()(((()))())","()(((())))()","()((()(())))","()((()()()))","()((()())())","()((()()))()","()((())(()))","()((())()())","()((())())()","()((()))(())","()((()))()()","()(()((())))","()(()(()()))","()(()(())())","()(()(()))()","()(()()(()))","()(()()()())","()(()()())()","()(()())(())","()(()())()()","()(())((()))","()(())(()())","()(())(())()","()(())()(())","()(())()()()","()()(((())))","()()((()()))","()()((())())","()()((()))()","()()(()(()))","()()(()()())","()()(()())()","()()(())(())","()()(())()()","()()()((()))","()()()(()())","()()()(())()","()()()()(())","()()()()()()");
        check(expected, output);
    }

    @Test
    public void testEmpty() {
        Solution sol = new Solution();
        List<String> output = sol.generateParenthesis(0);
        List<String> expected = Arrays.asList();
        check(expected, output);
    }

    @Test
    public void testOne() {
        Solution sol = new Solution();
        List<String> output = sol.generateParenthesis(1);
        List<String> expected = Arrays.asList("()");
        check(expected, output);
    }

    private void check(List<String> expected, List<String> output) {
        //Assert.assertEquals(expected.size(), output.size());
        for (String exp : expected) {
            System.out.println(exp);
            Assert.assertTrue(output.contains(exp));
        }
    }


}
